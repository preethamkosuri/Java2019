
int bcCount = 0, stCount = 0, scCount = 0;
for (int index = 0; index < list.length; index++){
if (list[index].category.toLowerCase().equals("bc"))
bcCount++;
else if (list[index].category.toLowerCase().equals("sc"))
scCount++;
else if (list[index].category.toLowerCase().equals("st"))
stCount++;
}
Arrays.sort(list);
Student selected[] = new Student[vacancies];
int selected_index = 0,copy = open;
for (int index = 0; index<copy; index++,--open,--vacancies) {
selected[selected_index++] = list[index];
if (list[index].category.toLowerCase().equals("bc"))
bcCount--;
else if (list[index].category.toLowerCase().equals("sc"))
scCount--;
else if (list[index].category.toLowerCase().equals("st"))
stCount--;
}
for (int index = copy; index<list.length && vacancies > 0; index++){
if (list[index].category.toLowerCase().equals("bc") && bcReserved > 0) {
selected[selected_index++] = list[index];
vacancies--;
bcReserved--;
bcCount--;
}
else if(list[index].category.toLowerCase().equals("sc") && scReserved > 0){
selected[selected_index++] = list[index];
vacancies--;
scReserved--;
scCount--;
}
else if(list[index].category.toLowerCase().equals("st") && stReserved > 0){
selected[selected_index++] = list[index];
vacancies--;
stReserved--;
stCount--;
}
else if (bcReserved > 0 && bcCount <= 0) {
selected[selected_index++] = list[index];
bcCount--;
bcReserved--;
vacancies--;
}
else if (scReserved > 0 && scCount <= 0) {
selected[selected_index++] = list[index];
scCount--;
scReserved--;
vacancies--;
}
else if (stReserved > 0 && stCount <= 0) {
selected[selected_index++] = list[index];
stCount--;
stReserved--;
vacancies--;
}
}

return selected;